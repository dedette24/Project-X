Bonjour a tous, nous allons vous présenter aujourd'hui notre jeu Poopkemon.
#Sommaire : 
1- L'idée de base  ( notre idée, pk on a choisi ça, comment on a commencé et découpé en petits problèmes )
2- Les problèmes rencontrés   ( Les nombreux problèmes qu'on a eu et comment on les a résoluts )
3- Le futur  (Les eventuelles améliorations plus tard)
4- Abstraction et outils (Les trucs qu'on a utilisé, généralisation)


1:
Amir :Nous avons donc décidé de faire un jeu du style de pokémon car c'est ce qui semblait être le plus accessible en python car ça ne nécessitait pas d'interface graphique.
L'objectif était donc de faire un jeu qui opposerait deux joueurs qui ont chacun 2 poopkémons au total, dont 1 seul poopkémon actif a la fois (en gros c du 1v1, pas 2v2, 
1 sur le terrain et l'autre en retrait). Le combat se déroule de la façon suivante : chaque joueur a 2 poopkemon aléatoires, puis ils doivent choisir 3 parmis 6 attaques
aléatoires pour leurs compagnons, une fois cela fait la partie commence. A chaque tour , les joueurs peuvent soit attaquer, soit changer de Poopkemon, soit utiliser un objet
ou abandonner.

Elias : Il a donc fallu commencer par des petits progès. Au début, Elias s'occupait de faire des pokémons, Amir l'organisation des tours et Adam
les premiers principes de combat. Au fur et à mesure quand les pokémons était prêt et fonctionnel et que la façon dont les combats et les tours marchaient était clair, Elias a fait
les objets et une fonction pour utiliser, Amir a commencé a faire la boucle qui regrouperait tout le jeu et Adam a fait des fonctions pour le combat. Cela fait il restait encore 
a faire une fonction pour pouvoir changer de poopkemon fait par Adam, faire en sorte que l'adversaire prenne plus ou moins de dégats si l'attaque est super efficace ou 
pas très efficace fait par Amir, et une fonction pour abandonner le combat faite par Elias. Après tout ça le jeu était fonctionnel et on a tous rajouté nos petites touches personnelles
, il fallait aussi modifier les stats pour une meilleur expérience, que les combats ne soient pas trop long ni trop court
, on a rajouté des couleurs pour que ce soit plus lisible et des textes pour bien expliquer ce qui se passe et guider le joueur. Le jeu était ainsi fini.

2: 
Adam (dis ces problèmes la stv mais sinon tu peux en dire d'autres, ):
Au long du progès on a évidemment rencontré beaucoup de problèmes, l'un des premiers étant la compréhension. Comme chacun codait de son côté, quand on a mis en commun il y a eu
quelques incompréhension mais après on s'est expliqué nos parties nous nous sommes mis d'accord sur des noms de variables pour le reste du code et ça s'est bien passé. 
Avec les tests ont a eu de nombreuses erreurs qui nous on parfois obligé a reprendre certains points du début. Par exemple on avait voulu mettre les pokemons de chaque joueur
dans 2 listes différentes et les pokemons actifs seraient en position 0 de la liste. ça a rendu les choses très compliqué donc on a préféré crée une autre liste en plus qui 
s'appelle actif avec une position qui correspond a chaque équipe. On avait aussi mit des stats spécifiques a chaque pokemon puis on a décidé de rendre toutes les stats aléatoires
ce qui a permis de réparer les erreurs plus vite. Vers la fin, on a eu des problèmes quand le pokemon était KO, donc il a fallu ajouter un attribut KO a la classe Pokemon qui 
a permis de résoudre ce problème. On a rencontré beaucoup d'autres problèmes mais ce serait évidemment impossible de tout lister ici, la plupart du temps c'était parce que l'idée
de base était mauvaise ou mal exprimée ou alors que le moyen utilisé n'était pas optimal ou ne marchait pas. Au final on a du reprendre plusieurs chose a 0 mais on a finit par y arriver.
Parlons maintenant du futur de notre progès. 

3:
Amir :Au début nous avions beaucoup d'idée de modes de jeu différents, on voulait faire différents modes de jeu un peu comme le jeu Pokémon de base avec des combats a 1 Poopkemon et des
combats avec 2 Pokemons actifs en même temps, mais aussi d'autres formats non-existants plus originaux comme des combats où tout serait aléatoire ou des combats à 6 contre 6. On
avait aussi pour idée de rajouter des améliorations du gameplay en introduisant les mécaniques spéciales de pokémon comme la méga-évolution, les objets tenus ou l'amitié, mais on s'est vite rendu compte
que ce serait impossible a faire en si peu de temps, on s'est donc contenté de faire le format Random Battle où tout est aléatoire, que ce soit les Poopkémon, leurs stats,
les objets à disposition et même les types des pokémons et de leurs attaques. Mais nous comptons bien ajouter des améliorations à ce jeu dans un futur proche.

4:
Elias :Dans un aspect plus technique, nous avons utilisés des classes python pour faire nos Poopkémon. C'était le choix le plus logique pour un élément qui devrait porter de nombreuses
informations comme nos Poopkémons. Une classe dans Python est une collection unique de données, appelés attributs, et de comportements, appelés méthodes. ça permet donc
de stocker plusieurs variables en une qui sont ici : 
Le nom du Poopkémon
La vie du Poopkémon, quand elle tombe à 0 le Poopkémon est KO et ne peut plus combattre
L'attaque du poopkémon, qui augmente les dégats infligés à l'adversaire
La défense du poopkémon, qui diminue les dégats reçus des attaques ennemis
La vitesse du poopkémon, qui détermine si il va attaquer avant son adversaire ou non
Le type du poopkémon, qui détermine si les dégats subis seront super efficace, pas très efficace ou inefficace
Les attaques du poopkémon, une liste qui regroupe les attaques qu'a le poopkémon
Le statut KO, qui détermine si le poopkémon est utilisable ou non

C'était la seul option possible, on aurait pu regrouper ces informations dans des listes pour chaque poopkémon, mais ça aurait été beaucoup plus compliqué à manipuler.
Toute les fonctions qui font marcher le jeu sont dans une boucle qui répète les tours jusqu'a ce que les 2 Poopkémons d'un joueur soit KO, une fois KO le poopkemon doit quitter
le terrain et ne peut plus être utilisé. 

Adam :Les autres classes utilisées dans le code sont la classe Attaque et la classe Objet. On a besoin de la classe Attaque car les Attaques
ont aussi plusieurs particularités qui sont:
Le nom de l'attaque
Les dégats de base, qui déterminent les dégats sans le bonus d'attaque du poopkémon
Le nombre d'utilisations, qui déterminent le nombre de fois que l'on peut utiliser l'attaque
Le type,qui détermine si les dégâts infligés sont super efficace, pas très efficace ou inefficace

Les attributs des objets sont :
Le nom de l'objet
Le type, qui détermine si l'objet soigne, octroie un boost de défense ou d'attaque
Le nb d'utilisations
Les points, qui déterminent à quel point l'objet soigne, donne un boost de défense ou d'attaque 
L'utilisateur, la personne qui l'utilise

Amir :De façon plus générale, ce code pourrait être réadapté pour faire un autre jeu de stratégie sur un autre thème en modifiant quelques mécaaniques de combat
, voire même faire un jeu éducatif avec des quiz. En effet si on
garde la classe pokemon en enlevant certaines stats, en remplaçant le nom des attaques par des réponses et en faisant en sorte que l'adversaire pose des questions, on pourrait faire
un jeu de question-réponse éducatif par exemple. On pourrait aussi ajouter des fonctionnalités en ligne pour faire des tournois en ligne par exemple. Il serait aussi possible
de le réadapter pour des jeux de stratégies d'un autre type comme un jeu de carte en changeant le déroulement du jeu et en modifiant les conditions. Donc en conclusion, même si
ça n'en a pas l'air, ce code pourrait se réveler plus utile que vous ne l'auriez cru dans des projets futur.
